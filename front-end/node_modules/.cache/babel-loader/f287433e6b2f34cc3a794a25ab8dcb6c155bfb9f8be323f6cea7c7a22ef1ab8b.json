{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\js-project\\\\FE Assignment\\\\front-end\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = ({\n  onSignup\n}) => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const response = await fetch(\"/api/auth/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        onSignup(data.token);\n        navigate(\"/tasks\");\n      } else {\n        alert(data.msg || \"Signup failed\");\n      }\n    } catch (error) {\n      alert(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-control\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Name\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Re-Enter Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"SignUp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"{Cancel}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"k10P5rXISoKNicPMRVRgKFIP9zU=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useState","useNavigate","Link","jsxDEV","_jsxDEV","Signup","onSignup","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","navigate","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","token","msg","error","className","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/js-project/FE Assignment/front-end/src/components/Signup.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nconst Signup = ({ onSignup }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"/api/auth/signup\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        onSignup(data.token);\r\n        navigate(\"/tasks\");\r\n      } else {\r\n        alert(data.msg || \"Signup failed\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"An error occurred. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"form-control\" onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\"\r\n        placeholder=\"Enter Name\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <input \r\n        type=\"password\"\r\n        placeholder=\"Enter Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <input \r\n        type=\"password\"\r\n        placeholder=\"Re-Enter Password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n      />\r\n      <input \r\n        type=\"submit\"\r\n        value=\"SignUp\"\r\n      />\r\n      <Link to=\"/\">\r\n        <input \r\n        type=\"submit\"\r\n        value=\"{Cancel}\"/>\r\n      </Link>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}