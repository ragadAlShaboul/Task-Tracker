{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\js-project\\\\FE Assignment\\\\front-end\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { getUser } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  useEffect(() => {\n    if (token) {\n      getUser(token).then(data => setUser(data)).catch(err => console.error(err));\n    }\n  }, [token]);\n  const login = newToken => {\n    setToken(newToken);\n    localStorage.setItem('token', newToken);\n  };\n  const logout = () => {\n    setToken('');\n    setUser(null);\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"vRys+suGQMLnOBXbfZinzfxFoX0=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","getUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","then","data","catch","err","console","error","login","newToken","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/js-project/FE Assignment/front-end/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\nimport { getUser } from '../api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [token, setToken] = useState(localStorage.getItem('token') || '');\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            getUser(token).then(data => setUser(data)).catch(err => console.error(err));\r\n        }\r\n    }, [token]);\r\n\r\n    const login = (newToken) => {\r\n        setToken(newToken);\r\n        localStorage.setItem('token', newToken);\r\n    };\r\n\r\n    const logout = () => {\r\n        setToken('');\r\n        setUser(null);\r\n        localStorage.removeItem('token');\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,OAAO,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EAEvEb,SAAS,CAAC,MAAM;IACZ,IAAIU,KAAK,EAAE;MACPT,OAAO,CAACS,KAAK,CAAC,CAACI,IAAI,CAACC,IAAI,IAAIN,OAAO,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;IAC/E;EACJ,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,MAAMU,KAAK,GAAIC,QAAQ,IAAK;IACxBV,QAAQ,CAACU,QAAQ,CAAC;IAClBT,YAAY,CAACU,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;EAC3C,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACjBZ,QAAQ,CAAC,EAAE,CAAC;IACZF,OAAO,CAAC,IAAI,CAAC;IACbG,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;EACpC,CAAC;EAED,oBACIrB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAEE,KAAK;MAAEU,KAAK;MAAEG;IAAO,CAAE;IAAAjB,QAAA,EACvDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACvB,EAAA,CA1BWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA4BzB,eAAeD,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}